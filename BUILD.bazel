# TODO: Bring back other platforms, this was hard-coded for Windows

cc_library(
    name = "ares",
    # This should not be propagated, as other libraries might pick it up and complain (like curl with curl_config.h)
    local_defines = ["HAVE_CONFIG_H"],
    hdrs = [
        "include/ares.h",
        "include/ares_config.h",
        "include/ares_build.h",
        "include/ares_dns.h",
        "include/ares_dns_record.h",
        "include/ares_nameser.h",
        "include/ares_version.h",
    ],
    # This then have to be propagated, as anyone including above hdrs would expect it
    defines = ["CARES_STATICLIB"],
    # For whoever uses this library, pretend the "include" is not there.
    strip_include_prefix = "include",
    srcs = glob(["src/lib/**/*.c", "src/lib/**/*.h",]),
    includes = [
        "include",
        "src/lib/include",
        "src/lib",
    ],
    linkopts = select({
        "@platforms//os:windows": [
            "-defaultlib:ws2_32.lib",
            "-defaultlib:Iphlpapi.lib",
            "-defaultlib:advapi32.lib",
        ],
        "//conditions:default": [],
    }),
    visibility = [
        "//visibility:public",
    ],
)

cc_library(
    name = "ares_getopt",
    srcs = ["src/tools/ares_getopt.c"],
    hdrs = ["src/tools/ares_getopt.h"],
    strip_include_prefix = "src/tools",
)

cc_binary(
    name = "ahost",
    srcs = ["src/tools/ahost.c"],
    deps = [":ares", ":ares_getopt"],
)

cc_binary(
    name = "adig",
    srcs = ["src/tools/adig.c"],
    deps = [":ares", ":ares_getopt"],
)
